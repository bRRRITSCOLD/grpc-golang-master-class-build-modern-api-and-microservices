syntax = "proto3";

package calculator;
option go_package="calculator/calculatorpb";


message SumRequest {
  int32 first_number = 1;
  int32 second_number = 2;
}

message SumResponse {
  int32 result = 1;
}

message PrimeNumberDecompositionRequest {
  int32 number = 1;
}

message PrimeNumberDecompositionResponse {
  int32 prime_factor = 1;
}

message ComputeAverageRequest {
  int32 number = 1;
}

message ComputeAverageResponse {
  int32 average = 1;
}

message FindMaximumRequest {
  int32 number = 1;
}

message FindMaximumResponse {
  int32 maximum = 1;
}

message SquareRootRequest {
  int32 number = 1;
}

message SquareRootResponse {
  double square_root = 1;
}

service CalculatorService{
  // unary
  rpc Sum(SumRequest) returns (SumResponse) {};

  // server streaming
  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

  // client streaming
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

  // bi-directional streaming
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

  // unary
  // errors
  // INVALID_ARGUMENT - will throw error if number sent is negative
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}
